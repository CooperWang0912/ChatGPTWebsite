{"ast":null,"code":"var _jsxFileName = \"/Users/cooperwang/chatgpt/src/App.js\",\n  _s = $RefreshSig$();\n// Create a react component that inputs a textarea message and then perfome a fetch request to localhost:3001 gets back a respond as a data.message and displays that message in a box below\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3001\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(res => res.json()).then(data => setResponse(data.message));\n    fetch('https://huggingface.co/spaces/Plachta/VITS-Umamusume-voice-synthesizer', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: response.data.choices[0].text,\n        launguage: 'English',\n        character: '0:特别周',\n        duration: 1,\n        noise_scale: 0.667,\n        noise_scale_w: 0.8,\n        is_symbol: false\n      })\n    }).then(response => response.blob()).then(blob => {\n      const audioUrl = URL.createObjectURL(blob);\n      const audio = new Audio(audioUrl);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"background\",\n      src: \"https://i.pinimg.com/originals/05/8c/39/058c394af48e2d61cb986127fc1e2287.jpg\",\n      width: 300,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatGPT ChatApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      onKeyDown: e => {\n        if (e.key === \"Enter\") handleSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        placeholder: \"Input your question\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"ChatGPT: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), \" \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        padding: 6,\n        backgroundColor: \"beige\"\n      },\n      children: \"Made by Cooper Wang and Yiran Hu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jHM+YtvfzbETFFMW8yzFEfsiCIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","message","setMessage","response","setResponse","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","text","choices","launguage","character","duration","noise_scale","noise_scale_w","is_symbol","blob","audioUrl","URL","createObjectURL","audio","Audio","e","key","target","value","padding","backgroundColor"],"sources":["/Users/cooperwang/chatgpt/src/App.js"],"sourcesContent":["// Create a react component that inputs a textarea message and then perfome a fetch request to localhost:3001 gets back a respond as a data.message and displays that message in a box below\nimport React,{useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [message,setMessage] = useState(\"\");\n  const [response,setResponse] = useState(\"\");\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:3001\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({message})\n    }).then(res => res.json()).then(data => setResponse(data.message));\n    fetch('https://huggingface.co/spaces/Plachta/VITS-Umamusume-voice-synthesizer', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      text: response.data.choices[0].text,\n      launguage: 'English',\n      character: '0:特别周',\n      duration: 1,\n      noise_scale: 0.667, \n      noise_scale_w: 0.8,\n      is_symbol: false\n      })\n    })\n    .then(response => response.blob())\n    .then(blob => {\n      const audioUrl = URL.createObjectURL(blob);\n      const audio = new Audio(audioUrl);\n    });\n  }\n  \n  return (\n    <div className=\"App\">\n      <img id = \"background\" src = \"https://i.pinimg.com/originals/05/8c/39/058c394af48e2d61cb986127fc1e2287.jpg\" width={300} height={400}></img>\n      <h1>ChatGPT ChatApp</h1>\n      <form onSubmit={handleSubmit} onKeyDown={e => {if (e.key === \"Enter\") handleSubmit(e)}}>\n        <textarea value={message} placeholder=\"Input your question\" onChange={(e) => setMessage(e.target.value)}></textarea>\n        <button type=\"submit\">Send</button>\n      </form>\n      {response && <div><b>ChatGPT: </b> {response}</div>}\n      <audio controls>{audio}</audio>\n      <p style={{padding: 6, backgroundColor: \"beige\"}}>Made by Cooper Wang and Yiran Hu</p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
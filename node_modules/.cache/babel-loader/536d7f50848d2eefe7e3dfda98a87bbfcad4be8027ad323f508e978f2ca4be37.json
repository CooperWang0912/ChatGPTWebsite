{"ast":null,"code":"var _jsxFileName = \"/Users/cooperwang/chatgpt/src/App.js\",\n  _s = $RefreshSig$();\n// Create a react component that inputs a textarea message and then perfome a fetch request to localhost:3001 gets back a respond as a data.message and displays that message in a box below\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar input = document.getElementById(\"myInput\");\ninput.addEventListener(\"keypress\", function (event) {\n  if (event.key === \"Enter\") {\n    event.preventDefault();\n    document.handleSubmit();\n  }\n});\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3001\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(res => res.json()).then(data => setResponse(data.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatGPT ChatApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        placeholder: \"Input your question\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"ChatGPT: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), \" \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jHM+YtvfzbETFFMW8yzFEfsiCIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","input","document","getElementById","addEventListener","event","key","preventDefault","handleSubmit","App","message","setMessage","response","setResponse","fetch","method","headers","body","JSON","stringify","then","res","json","data","e","target","value"],"sources":["/Users/cooperwang/chatgpt/src/App.js"],"sourcesContent":["// Create a react component that inputs a textarea message and then perfome a fetch request to localhost:3001 gets back a respond as a data.message and displays that message in a box below\nimport React,{useState} from \"react\";\nimport './App.css';\n\nvar input = document.getElementById(\"myInput\");\n\ninput.addEventListener(\"keypress\", function(event){\n  if (event.key === \"Enter\") {\n    event.preventDefault();\n    document.handleSubmit();\n  }\n});\n\n\nfunction App() {\n  const [message,setMessage] = useState(\"\");\n  const [response,setResponse] = useState(\"\");\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:3001\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({message})\n    }).then(res => res.json()).then(data => setResponse(data.message));\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>ChatGPT ChatApp</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea value={message} placeholder=\"Input your question\" onChange={(e) => setMessage(e.target.value)}></textarea>\n        <button type=\"submit\">Send</button>\n      </form>\n      {response && <div><b>ChatGPT: </b> {response}</div>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAAC;AAEnB,IAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AAE9CF,KAAK,CAACG,gBAAgB,CAAC,UAAU,EAAE,UAASC,KAAK,EAAC;EAChD,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;IACzBD,KAAK,CAACE,cAAc,EAAE;IACtBL,QAAQ,CAACM,YAAY,EAAE;EACzB;AACF,CAAC,CAAC;AAGF,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACY,QAAQ,EAACC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAMQ,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACE,cAAc,EAAE;IACtBO,KAAK,CAAC,uBAAuB,EAAC;MAC5BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACT;MAAO,CAAC;IAChC,CAAC,CAAC,CAACU,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,IAAI,IAAIV,WAAW,CAACU,IAAI,CAACb,OAAO,CAAC,CAAC;EACpE,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAM,QAAQ,EAAEF,YAAa;MAAA,wBAC3B;QAAU,KAAK,EAAEE,OAAQ;QAAC,WAAW,EAAC,qBAAqB;QAAC,QAAQ,EAAGc,CAAC,IAAKb,UAAU,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eACpH;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,EACNd,QAAQ,iBAAI;MAAA,wBAAK;QAAA,UAAG;MAAS;QAAA;QAAA;QAAA;MAAA,QAAI,KAAC,EAACA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEV;AAAC,GAxBQH,GAAG;AAAA,KAAHA,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}